
version: "3"

services:
  # name of service = app
  app:
    build:
      # set context to . (current directory), that running docker-compose from
      context: .
    ports:
      # map port from LOCAL HOST to IMAGE
      - "8000:8000"
    volumes:
      #  map directory from local-project-directory to the app-in-docker
      - ./app:/app
      # run script-command in shell
    command: >
      sh -c "python manage.py wait_for_db &&
              python manage.py migrate &&
              python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=db
      - DB_NAME=app
      - DB_USER=postgres
      - DB_PASS=supersecretpassword
    # "depends on MEAN = > "we want app-service depends on db-service
      # 1. db will start before app
      # 2.  so db-service will available when app-environment use the DB_HOST, DB_NAME ...
    depends_on:
      - db
  db:
    # postgres of docker image version-10
    image:  postgres:10-alpine
    environment:
      # set POSTGRES to app
      - POSTGRES_DB=app
      - POSGRES_USER=postgres
      - POSTGRES_PASSWORD=supersecretpassword
      # just use plain-text for LOCAL, but encrypted for web-env
